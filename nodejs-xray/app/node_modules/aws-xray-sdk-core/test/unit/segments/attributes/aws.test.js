var assert = require('chai').assert;
var Aws = require('../../../../lib/segments/attributes/aws');
var sinon = require('sinon');

describe('Aws', function() {
  var serviceName = 's3';
  var req;

  describe('#init', function() {
    var sandbox;

    beforeEach(function() {
      sandbox = sinon.sandbox.create();
      sandbox.stub(Aws.prototype, 'addData');

      req = {
        request: {
          operation: 'putObject',
          httpRequest: {
            region: 'us-east-1'
          }
        },
        requestId: 'C9336616C948DC3C',
        retryCount: 3
      };
    });

    afterEach(function() {
      sandbox.restore();
    });

    it('should create a new aws object', function() {
      var aws = new Aws(req, serviceName);
      assert.isObject(aws);
    });

    it('should capture the request ID but not the extendedRequestId', function() {
      var aws = new Aws(req, serviceName);
      assert.propertyVal(aws, 'request_id', req.requestId);
      assert.notProperty(aws, 'id_2');
    });

    it('should capture the special S3 extendedRequestId (x-amz-id-2 header) if set', function() {
      req.extendedRequestId = 'AzVdR5vxfKlTwI7SMKu+suvQRfzGrzDtZRy3dU7Te6vbFx/R18U0I/ndTmLfA78sVxgfRo0lDMQ=';
      var aws = new Aws(req, serviceName);

      assert.propertyVal(aws, 'id_2', req.extendedRequestId);
    });

    it('should format the operation name', function() {
      var aws = new Aws(req, serviceName);
      assert.propertyVal(aws, 'operation', 'PutObject');
    });
  });
});
